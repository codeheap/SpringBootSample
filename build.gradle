/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'U114843' at '22.02.16 13:46' with Gradle 2.10
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html */
buildscript {
    repositories {
        mavenCentral()
        maven {url 'https://plugins.gradle.org/m2' }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
        classpath('com.gradle:build-scan-plugin:1.7')
    }
}

apply plugin:'com.gradle.build-scan'
apply plugin:'java'
apply plugin:'org.springframework.boot'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

dependencies {
    compile("org.slf4j:slf4j-api")
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile "io.springfox:springfox-swagger2:2.7.0"
    compile 'io.springfox:springfox-swagger-ui:2.7.0'
    compile 'org.springframework.hateoas:spring-hateoas:0.23.0.RELEASE'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile 'junit:junit:4.+'
}

sourceCompatibility = 1.8
version = '0.4.1'

jar {
    baseName = 'SpringBootSample'
    manifest {
        attributes  'Implementation-Title':'Sample REST Webservice based on Spring Boot', 
                    'Implementation-Version':version, 
                    'Main-Class':'ch.froorider.samples.Application'
    }
}

springBoot  {
    buildInfo()
}

task copyApp(type:Copy, dependsOn:build) {
    from './build/libs/SpringBootSample-0.4.1.jar'
    into './build/tmp'
}

task copyDockerFile(type:Copy, dependsOn:copyApp) {
    from './src/main/docker/Dockerfile'
    into './build/tmp'
}

task buildDocker(type:Exec){
    workingDir './build/tmp'
    commandLine 'cmd','/c','docker build --rm -t codeheap/springbootsample:latest .'
    commandLine 'cmd','/c','docker build --rm -t codeheap/springbootsample:0.4 .'
}

task publishDocker(type:Exec, dependsOn:buildDocker){
    workingDir './build/tmp'
    commandLine 'cmd','/c','docker push codeheap/springbootsample:latest'
    commandLine 'cmd','/c','docker push codeheap/springbootsample:0.4'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}